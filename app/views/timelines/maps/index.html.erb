<style>
  html, body, #map-canvas {
    height: 100%;
    margin: 0px;
    padding: 0px
  }
</style>
      
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script>
	navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
	var map;
	
	function initialize(latitude, longitude) {
 		var mapOptions = {
  		zoom: 15,
      center: new google.maps.LatLng(latitude, longitude)					
    }
    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
  }

	function mark(map, radius, fillColor){
		/* 円オブジェクト生成 */
		var populationOptions = {
			strokeColor: '#000000', /* ストロークの色 */
			strokeOpacity: 0.8,       /* ストロークの透明度 */
			strokeWeight: 2,          /* ストロークの幅 */
			fillColor: fillColor,     /* フィルの色 */
			fillOpacity: 0.35,        /* フィルの透明度 */
			map: map,                 /* 図形を追加する地図オブジェクト */
			center: map.center,       /* 円の中心 */
			radius: radius				    /* 円の大きさ */
		};
		// Add the circle for this city to the map.
		cityCircle = new google.maps.Circle(populationOptions);
		
		var marker = new google.maps.Marker({
			position: map.center,
			map: map
		});
	}
	
	/** ユーザーの現在の位置情報を取得 */
	function successCallback(position) {

		// 地図の初期表示
		initialize(position.coords.latitude, position.coords.longitude);

		// ツイート＆カラーの取得
		$.ajax({
			type:'GET',
			dataType:'json',
			url:'/timelines',
			data: {
				latitude : position.coords.latitude, 
				longitude : position.coords.longitude
			}
		}).done(function(data) {
			var color = data.timelines.colors;
			console.log(color);

			mark(map, 1000, "rgb(" + color.r + "," + color.g + "," + color.b + ")");
	  }).fail(function(e) {
	    alert("error");
	  });
	}

	/** 位置情報が取得できない場合 */
	function errorCallback(error) {
		var err_msg = "";
		switch(error.code)
		{
			case 1:
				err_msg = "位置情報の利用が許可されていません";
				break;
			case 2:
				err_msg = "デバイスの位置が判定できません";
				break;
			case 3:
				err_msg = "タイムアウトしました";
				break;
				alert(err_msg);
		}
	}

</script>
<div id="map-canvas"></div>
